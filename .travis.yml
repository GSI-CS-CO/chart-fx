language: java
sudo: false
dist: xenial
jdk:
        - openjdk11

# setup pgp signing key
before_install:
        - if [ -n "$GPG_KEY" ]; then echo $GPG_KEY | base64 --decode | $GPG_EXECUTABLE --import; fi
        - if [ -n "$GPG_KEY" ]; then echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust; fi
        - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then export REVISION=${TRAVIS_BRANCH}; else export REVISION=${TRAVIS_BRANCH}PR${TRAVIS_PULL_REQUEST}; fi
        - if [ -z "$TRAVIS_TAG" ]; then export CHANGELIST=-SNAPSHOT; fi
        - export COVERITY_RESULTS_ARCHIVE=coverity_report.tar.bz2
        - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then export COVERITY_SCAN_VERSION="cron"; else if [ -n "$TRAVIS_TAG" ]; then export COVERITY_SCAN_VERSION="$TRAVIS_TAG"; else if [ "$TRAVIS_BRANCH" == "coverity_scan" ]; then export COVERITY_SCAN_VERSION="$TRAVIS_BRANCH"; fi; fi; fi
        - echo "detected coverity scan export name ='${COVERITY_SCAN_VERSION}'"

# Install dependencies and output maven version information
install:
        - mvn --settings .maven.xml install -Dgpg.skip=true -Dmaven.javadoc.skip=true -B -V -Drevision=${REVISION} -Dchangelist=${CHANGELIST}

# compile and deploy maven project
script:
        - if [ -n "$GPG_KEY" ]; then mvn clean deploy --settings .maven.xml -Prelease -Drevision=${REVISION} -Dchangelist=${CHANGELIST}; fi
        - |-2
          if [ -n "$COVERITY_SCAN_VERSION"]; then
            if [ ! -d "$HOME/cov-analysis-linux64-2019.03" ]; then
              wget https://scan.coverity.com/download/java/Linux --post-data "token=${COVERITY_TOKEN}&project=chart-fx" -O coverity_tool.tgz
              tar xzf coverity_tool.tgz --directory $HOME;
            else
              echo "coverity tool already present"
            fi
            export PATH=$PATH:$HOME/cov-analysis-linux64-2019.03/bin;
          fi

# execute junit tests and generate jacoco to coveralls.io reports
after_success:
  - mvn clean test jacoco:report-aggregate coveralls:report
  - echo "TRAVIS_EVENT_TYPE = '${TRAVIS_EVENT_TYPE}'  TRAVIS_BRANCH = '${TRAVIS_BRANCH}' TRAVIS_TAG = '${TRAVIS_TAG}'"
  - |-2
    if [ -n "$COVERITY_SCAN_VERSION" ]; then
      echo "coverity scan triggered as COVERITY_SCAN_VERSION = '${COVERITY_SCAN_VERSION}'";
      if [ -d "$HOME/cov-analysis-linux64-2019.03" ]; then
        echo "coverity tool is present";
        cov-build --dir cov-int mvn clean compile;
        tar cjf $COVERITY_RESULTS_ARCHIVE cov-int;
        if [ -n "$COVERITY_SCAN_VERSION" ]; then
          curl --form token=${COVERITY_TOKEN} \
            --form email=$COVERITY_SCAN_NOTIFICATION_EMAIL \
            --form file=@$COVERITY_RESULTS_ARCHIVE \
            --form version=$COVERITY_SCAN_VERSION \
            --form description="Description" \
            https://scan.coverity.com/builds?project=chart-fx;
          echo "coverity scan submitted as COVERITY_SCAN_VERSION = '${COVERITY_SCAN_VERSION}'";
        else
          echo "coverity scan not submitted - COVERITY_SCAN_VERSION = '${COVERITY_SCAN_VERSION}'";
        fi
      else
        echo "coverity tool is not present"
      fi
    else
      echo "coverity scan not triggered for COVERITY_SCAN_VERSION = '${COVERITY_SCAN_VERSION}'"
    fi

# cache maven artifacts
cache:
        directories:
                - $HOME/.m2
                - $HOME/cov-analysis-linux64-2019.03
